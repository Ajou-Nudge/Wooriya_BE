plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "jacoco"
	id "org.sonarqube" version "3.4.0.2513"
}

def customJacocoReportDir = 'jacoco/reports'

group = 'com.nudge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = '0.8.11'
}

jacocoTestReport {
	reports {
		html.required.set(true)
		html.outputLocation.set(layout.buildDirectory.dir("$customJacocoReportDir/html"))

		xml.required.set(true)
		xml.outputLocation.set(layout.buildDirectory.file("$customJacocoReportDir/xml/jacoco.xml"))

		csv.required.set(true)
		csv.outputLocation.set(layout.buildDirectory.file("$customJacocoReportDir/csv/jacoco.csv"))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.7
			}
		}
	}
}
sonarqube {
	properties {
		property "sonar.projectKey", "Wooriya_BE"
		property "sonar.projectName", "Wooriya_BE"
		property "sonar.modules", subprojects.collect { it.name }.join(',')
		subprojects.forEach { subproject ->
			property "sonar.${subproject.name}.coverage.jacoco.xmlReportPaths", "${subproject.layout.buildDirectory.get()}/$customJacocoReportDir/xml/jacoco.xml"
		}
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.json:json:20210307'
}

test {
//	dependsOn loadDotEnvFile
	finalizedBy jacocoTestReport, jacocoTestCoverageVerification
	useJUnitPlatform()
//	systemProperties System.getProperties()
}


tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	sourceResources sourceSets.main
}